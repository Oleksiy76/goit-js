//* –ü–µ—Ä–µ–±–æ—Ä –æ–±—ä–µ–∫—Ç–∞

// const feedback = {
//   good: 5,
//   neutral: 10,
//   bad: 3,
// };

// let totalFeedback = 0;

// const keys = Object.keys(feedback); // –ø–æ–ª—É—á–∞–µ–º –º–∞—Å—Å–∏–≤ –∫–ª—é—á–µ–π –∏–∑ –æ–±—ä–µ–∫—Ç–∞
// console.log("üöÄ ~ key:", keys)

// for (const key of keys) {
//     console.log(key);
//     console.log(feedback[key]);

//     totalFeedback += feedback[key];
// }

//  console.log("üöÄ ~ totalFeedback:", totalFeedback);

// const values = Object.values(feedback); // –ø–æ–ª—É—á–∞–µ–º –º–∞—Å—Å–∏–≤ –∑–Ω–∞—á–µ–Ω–∏–π –∏–∑ –æ–±—ä–µ–∫—Ç–∞
// console.log("üöÄ ~ values:", values);

// for (const value of values) {
//     console.log(value);

//     totalFeedback += value;
// }

// console.log("üöÄ ~ totalFeedback:", totalFeedback);

//!====================================================

//* –ò–º–µ–µ—Ç—Å—è –º–∞—Å—Å–∏–≤ –æ–±—ä–µ–∫—Ç–æ–≤

// const friends = [
//   { name: "Mango", online: false },
//   { name: "Kiwi", online: true },
//   { name: "Poly", online: true },
//   { name: "Ajax", online: false },
// ];

// console.table(friends);

//* –ë—É–¥–µ–º –∏—Å–∫–∞—Ç—å –¥—Ä—É–≥–∞ –ø–æ –∏–º–µ–Ω–∏
//* –ø–µ—Ä–µ–±–∏—Ä–∞–µ–º –º–∞—Å—Å–∏–≤ —á–µ—Ä–µ–∑ FOR –∏ —á–µ—Ä–µ–∑ IF —Å—Ä–∞–≤–Ω–∏–≤–∞–µ–º –∏–º–µ–Ω–∞ –∫–ª—é—á–µ–π –æ–±—ä–µ–∫—Ç–æ–≤ —Å –∏–º–µ–Ω–µ–º –≤ –∞—Ä–≥—É–º–µ–Ω—Ç–µ

// const findFriendByName = function (allFriends, friendName) {
//   for (const friend of allFriends) {
// –ø–æ–ª—É—á–∞–µ–º –¥–æ—Å—Ç—É–ø –∫ –∫–∞–∂–¥–æ–º—É —ç–ª–µ–º–µ–Ω—Ç—É
// console.log(friend);
// console.log(friend.name);

//     if (friend.name === friendName) {
//       return "–ù–ê–®–õ–ò !!!";
//     }
//   }

//   return "–ù–µ –Ω–∞—à–ª–∏!";
// };

// console.log(findFriendByName(friends, "Poly"));
// console.log(findFriendByName(friends, "Chelsy"));

//* –ù—É–∂–Ω–æ –ø–æ–ª—É—á–∏—Ç—å –º–∞—Å—Å–∏–≤ –≤—Å–µ—Ö –∏–º–µ–Ω –Ω–∞—à–∏—Ö –¥—Ä—É–∑–µ–π

// const getAllNames = function (allFriends) {

//   const names = [];

//   for (const friend of allFriends) {
//     console.log(friend.name);
//     names.push(friend.name);
//   }

//   return names;
// };

// console.log(getAllNames(friends));

//* –ù—É–∂–Ω–æ –ø–æ–ª—É—á–∏—Ç—å –≤—Å–µ—Ö –¥—Ä—É–∑–µ–π, –∫–æ—Ç–æ—Ä—ã–µ –æ–Ω–ª–∞–π–Ω

// const getOnlineFriends = function (allFriends) {
//   const onlineFriends = [];

//   for (const friend of allFriends) {
//     console.log(friend);
//     console.log(friend.online);

//     if (friend.online) {
//       onlineFriends.push(friend);
//     }
//   }
//   return onlineFriends;
// };

// console.log(getOnlineFriends(friends));

//!====================================================
//* SPRED –∏ REST

// const numbers = [1, 2, 3].concat([4, 5, 6], [7, 8, 9]);

// const numbers = [5, 10, ...[1, 2, 3], 4, 5, ...[7, 8, 9]]; // –æ–ø–µ—Ä–∞—Ü–∏—è —Ä–∞—Å–ø—ã–ª–µ–Ω–∏—è spread - –±–æ–ª–µ–µ —Å–æ–≤—Ä–µ–º–µ–Ω–Ω—ã–π —Å–∏–Ω—Ç–∞–∫—Å–∏—Å –ø–æ —Å—Ä–∞–≤–Ω–µ–Ω–∏—é —Å concat

// console.log(numbers);

//* –ü–æ–∏—Å–∫ —Å–∞–º–æ–π –º–∞–ª–µ–Ω—å–∫–æ–π –∏ –±–æ–ª—å—à–æ–π —Ç–µ–º–ø–µ—Ä–∞—Ç—É—Ä—ã

// const temps = [18, 14, 12, 21, 17, 29, 24];

// console.log(Math.max(...temps));
// console.log(Math.min(...temps)); // "—Ä–∞—Å–ø—ã–ª—è–µ–º" —ç–ª–µ–º–µ–Ω—Ç—ã –º–∞—Å—Å–∏–≤–∞ –∏ —Ç.–æ. –ø–µ—Ä–µ–¥–∞—ë–º –∏—Ö –∫–∞–∫ –æ—Ç–¥–µ–ª—å–Ω—ã–µ –∞—Ä–≥—É–º–µ–Ω—Ç—ã, –∏ —Å—Ä–µ–¥–∏ –∞—Ä–≥—É–º–µ–Ω—Ç–æ–≤ —É–∂–µ –æ–ø—Ä–µ–¥–µ–ª—è–µ–º min / max

//* –°—à–∏–≤–∞–µ–º –Ω–µ—Å–∫–æ–ª—å–∫–æ –º–∞—Å—Å–∏–≤–æ–≤

// const lastWeekTemps = [1, 2, 3];
// const currentTemps = [4, 5, 6];
// const nextWeekTemps = [7, 8, 9];

// const allTemps = [...lastWeekTemps, ...currentTemps, ...nextWeekTemps];

// console.log(allTemps);

//* –†–∞—Å–ø—ã–ª–µ–Ω–∏–µ –æ–±—ä–µ–∫—Ç–æ–≤

// const a = { x: 1, y: 2 };
// const b = { x: 0, z: 3 };

// const c = {
//   ...a,
//   ...b,
// };

// console.log(c);

//!====================================================

//* –ì–ª—É–±–æ–∫–∞—è –¥–µ—Å—Ç—Ä—É–∫—Ç—É—Ä–∏–∑–∞—Ü–∏—è (–†–ï–ü–ï–¢–ê)

// const profile = {
//   name: "Oleg",
//   place: "Germany",
//   stats: {
//     followers: 5600,
//     views: 4522,
//     likes: 1320,
//   },
// };

// const { name, place, stats } = profile; // –¥–µ—Å—Ç—Ä—É–∫—Ç—É—Ä–∏–∑–∞—Ü–∏—è –æ–±—ä–µ–∫—Ç–∞

// const { followers, views, likes } = stats; // –¥–µ—Å—Ç—Ä—É–∫—Ç—É—Ä–∏–∑–∞—Ü–∏—è –≤–ª–æ–∂–µ–Ω–Ω–æ–≥–æ –æ–±—ä–µ–∫—Ç–∞

// –¥–≤–µ —Å—Ç—Ä–æ–∫–∏ –≤—ã—à–µ –º–æ–∂–Ω–æ –∑–∞–ø–∏—Å–∞—Ç—å –æ–¥–Ω–æ–π - —ç—Ç–æ –∏ –µ—Å—Ç—å –ì–õ–£–ë–û–ö–ê–Ø –¥–µ—Å—Ç—Ä—É–∫—Ç—É—Ä–∏–∑–∞—Ü–∏—è

// const {
//   name,
//   place,
//   stats: { followers, views, likes },
// } = profile;

// console.log(name, place, followers, views, likes);

//!====================================================

//* Example 4
// –ù–∞–ø–∏—à–∏ —Å–∫—Ä–∏–ø—Ç —É–ø—Ä–∞–≤–ª—ñ–Ω–Ω—è –æ—Å–æ–±–∏—Å—Ç–∏–º –∫–∞–±—ñ–Ω–µ—Ç–æ–º —ñ–Ω—Ç–µ—Ä–Ω–µ—Ç –±–∞–Ω–∫—É.
// –Ñ –æ–±'—î–∫—Ç account –≤ —è–∫–æ–º—É –Ω–µ–æ–±—Ö—ñ–¥–Ω–æ —Ä–µ–∞–ª—ñ–∑—É–≤–∞—Ç–∏ –º–µ—Ç–æ–¥–∏ –¥–ª—è —Ä–æ–±–æ—Ç–∏ –∑ –±–∞–ª–∞–Ω—Å–æ–º —Ç–∞ —ñ—Å—Ç–æ—Ä—ñ—î—é —Ç—Ä–∞–Ω–∑–∞–∫—Ü—ñ–π.

//  * –¢–∏–ø—ñ–≤ —Ç—Ä–∞–Ω–∑–∞–∫—Ü—ñ–π –≤—Å—å–æ–≥–æ –¥–≤–∞.
//  * –ú–æ–∂–Ω–∞ –ø–æ–∫–ª–∞—Å—Ç–∏ —á–∏ –∑–Ω—è—Ç–∏ –≥—Ä–æ—à—ñ –∑ —Ä–∞—Ö—É–Ω–∫—É.

// const TRANSACTIONS = {
//   DEPOSIT: "deposit",
//   WITHDRAW: "withdraw",
// };

// const account = {
//   –ü–æ—Ç–æ—á–Ω–∏–π –±–∞–ª–∞–Ω—Å —Ä–∞—Ö—É–Ω–∫—É
//   balance: 50,

//   –Ü—Å—Ç–æ—Ä—ñ—è —Ç—Ä–∞–Ω–∑–∞–∫—Ü—ñ–π
//   transactions: [],

/*
   * –ú–µ—Ç–æ–¥ —Å—Ç–≤–æ—Ä—é—î —Ç–∞ –ø–æ–≤–µ—Ä—Ç–∞—î –æ–±'—î–∫—Ç —Ç—Ä–∞–Ω–∑–∞–∫—Ü—ñ—ó.
   * –ü—Ä–∏–π–º–∞—î —Å—É–º—É —Ç–∞ —Ç–∏–ø —Ç—Ä–∞–Ω–∑–∞–∫—Ü—ñ—ó.
   * –ö–æ–∂–Ω–∞ —Ç—Ä–∞–Ω–∑–∞–∫—Ü—ñ—è —Ü–µ –æ–±'—î–∫—Ç —ñ–∑ –≤–ª–∞—Å—Ç–∏–≤–æ—Å—Ç—è–º–∏: id, type —Ç–∞ amount
   
  createTransaction(amount, type) {
    return {
      amount,
      type,
      id: this.transactions.length,
    };
  },

  /*
   * –ú–µ—Ç–æ–¥, —â–æ –≤—ñ–¥–ø–æ–≤—ñ–¥–∞—î –∑–∞ –¥–æ–¥–∞–≤–∞–Ω–Ω—è —Å—É–º–∏ –¥–æ –±–∞–ª–∞–Ω—Å—É.
   * –ü—Ä–∏–π–º–∞—î —Å—É–º—É —Ç—Ä–∞–Ω–∑–∞–∫—Ü—ñ—ó.
   * –í–∏–∫–ª–∏–∫–∞—î createTransaction –¥–ª—è —Å—Ç–≤–æ—Ä–µ–Ω–Ω—è –æ–±'—î–∫—Ç–∞ —Ç—Ä–∞–Ω–∑–∞–∫—Ü—ñ—ó
   * –ø—ñ—Å–ª—è —á–æ–≥–æ –¥–æ–¥–∞—î –π–æ–≥–æ –¥–æ —ñ—Å—Ç–æ—Ä—ñ—ó —Ç—Ä–∞–Ω–∑–∞–∫—Ü—ñ–π
  //  */
//   deposit(amount) {
//     const transaction = this.createTransaction(amount, TRANSACTIONS.DEPOSIT);
//     this.transactions.push(transaction);
//     this.balance += amount;
//   },

//   /*
//    * –ú–µ—Ç–æ–¥, —â–æ –≤—ñ–¥–ø–æ–≤—ñ–¥–∞—î –∑–∞ –∑–Ω—è—Ç—Ç—è —Å—É–º–∏ –∑ –±–∞–ª–∞–Ω—Å—É.
//    * –ü—Ä–∏–π–º–∞—î —Å—É–º—É —Ç—Ä–∞–Ω–∑–∞–∫—Ü—ñ—ó.
//    * –í–∏–∫–ª–∏–∫–∞—î createTransaction –¥–ª—è —Å—Ç–≤–æ—Ä–µ–Ω–Ω—è –æ–±'—î–∫—Ç–∞ —Ç—Ä–∞–Ω–∑–∞–∫—Ü—ñ—ó
//    * –ø—ñ—Å–ª—è —á–æ–≥–æ –¥–æ–¥–∞—î –π–æ–≥–æ –¥–æ —ñ—Å—Ç–æ—Ä—ñ—ó —Ç—Ä–∞–Ω–∑–∞–∫—Ü—ñ–π.
//    *
//    * –Ø–∫—â–æ amount –±—ñ–ª—å—à–µ –Ω—ñ–∂ –ø–æ—Ç–æ—á–Ω–∏–π –±–∞–ª–∞–Ω—Å, –≤–∏–≤–æ–¥—å –ø–æ–≤—ñ–¥–æ–º–ª–µ–Ω–Ω—è
//    * –ø—Ä–æ —Ç–µ, —â–æ –∑–Ω—è—Ç—Ç—è —Ç–∞–∫–æ—ó —Å—É–º–∏ –Ω–µ –º–æ–∂–ª–∏–≤–µ, –Ω–µ–¥–æ—Å—Ç–∞—Ç–Ω—å–æ –∫–æ—à—Ç—ñ–≤.
//    */
//   withdraw(amount) {
//     if (amount > this.balance) {
//       console.error("–ù–µ–¥–æ—Å—Ç–∞—Ç–Ω—å–æ –∫–æ—à—Ç—ñ–≤!");
//       return;
//     }
//     const transaction = this.createTransaction(amount, TRANSACTIONS.WITHDRAW);
//     this.transactions.push(transaction);
//     this.balance -= amount;
//   },

//   /*
//    * –ú–µ—Ç–æ–¥ –ø–æ–≤–µ—Ä—Ç–∞—î –ø–æ—Ç–æ—á–Ω–∏–π –±–∞–ª–∞–Ω—Å
//    */
//   getBalance() {
//     return this.balance;
//   },

//   /*
//    * –ú–µ—Ç–æ–¥ —à—É–∫–∞—î —Ç–∞ –ø–æ–≤–µ—Ä—Ç–∞—î –æ–±'—î–∫—Ç —Ç—Ä–∞–Ω–∑–∞–∫—Ü—ñ—ó –ø–æ id
//    */
//   getTransactionDetails(id) {
//     for (const transaction of this.transactions) {
//       if (id === transaction.id) {
//         return transaction;
//       }
//     }
//   },

//   /*
//    * –ú–µ—Ç–æ–¥ –ø–æ–≤–µ—Ä—Ç–∞—î –∫—ñ–ª—å–∫—ñ—Å—Ç—å –∫–æ—à—Ç—ñ–≤
//    * –ø–µ–≤–Ω–æ–≥–æ —Ç–∏–ø—É —Ç—Ä–∞–Ω–∑–∞–∫—Ü—ñ—ó –∑ —É—Å—ñ—î—ó —ñ—Å—Ç–æ—Ä—ñ—ó —Ç—Ä–∞–Ω–∑–∞–∫—Ü—ñ–π
//    */
//   getTransactionTotal(type) {
//     let total = 0;
//     for (const transaction of this.transactions) {
//       if (type === transaction.type) {
//         total += transaction.amount;
//       }
//     }
//     return total;
//   },
// };

// account.deposit(500);
// account.deposit(300);
// account.deposit(100);

// account.withdraw(200);

// console.log(account.transactions);
// console.log(account.getBalance());

// console.log(account.getTransactionDetails(2));
// console.log(account.getTransactionTotal(TRANSACTIONS.WITHDRAW));

//!====================================================

//* –î–µ—Å—Ç—Ä—É–∫—Ç—É—Ä–∏–∑–∞—Ü–∏—è –º–∞—Å—Å–∏–≤–æ–≤ (–†–ï–ü–ï–¢–ê)
//–ù—É–∂–Ω–æ –Ω–∞–π—Ç–∏ —Å–∞–º—ã –±–æ–ª—å—à–æ–π —Ä–µ–π—Ç–∏–Ω–≥

// const authors = {
//   kiwi: 4,
//   poly: 7,
//   mango: 6,
//   ajax: 9,
// };

// const entries = Object.entries(authors);

// // console.log(entries);

// // for (const entry of entries) {

// //   // const name = entry[0];
// //   // const rating = entry[1];

// //   //? –ª—É—á—à–µ –∑–∞–ø–∏—Å–∞—Ç—å –æ–¥–Ω–æ–π —Å—Ç—Ä–æ–∫–æ–π

// //   const [name, rating] = entry;

// //   console.log(name, rating);
// // }

// // TODO // –∏ –µ—â—ë —Å–∞–º—ã–π –æ–ø—Ç–∏–º–∞–ª—å–Ω—ã–π –≤–∞—Ä–∏–∞–Ω—Ç

// for (const [name, rating] of entries) {
//   console.log(name, rating);
// }

//!====================================================

//* –û–ø–µ—Ä–∞—Ü–∏—è REST (–†–ï–ü–ï–¢–ê)

// const profile = {
//   name: "Oleg",
//   tag: 'jgluke',
//   place: "Germany",
//   avatar: 'icon',
//   stats: {
//     followers: 5600,
//     views: 4522,
//     likes: 1320,
//   },
// };

// const { name, tag, place, ...restProps } = profile; // –ø–µ—Ä–≤—ã–µ 3 c–≤–æ–π—Å—Ç–≤–∞ –ª–æ–∫–∞–ª—å–Ω–æ–π –ø–µ—Ä–µ–º–µ–Ω–Ω–æ–π –¥–µ—Å—Ç—Ä—É–∫—Ç—É—Ä–∏–∑–∏—Ä—É–µ–º, –∞ –æ—Å—Ç–∞–≤—à–∏–µ—Å—è —Å–æ–±–∏—Ä–∞–µ–º –≤ –ø–µ—Ä–µ–º–µ–Ω–Ωe—é —Å –ø–æ–º–æ—â—å—é ...rest

// console.log(name, tag, place);
// console.log(restProps);

//!====================================================

//* –¥–∑ 19/41

// const products = [
//   { name: "Radar", price: 1300, quantity: 4 },
//   { name: "Scanner", price: 2700, quantity: 3 },
//   { name: "Droid", price: 400, quantity: 7 },
//   { name: "Grip", price: 1200, quantity: 9 },
// ];

// function getAllPropValues(propName) {
//   const arrayAllPropValues = [];

//   for (const product of products) {
//     if (product[propName]) {
//       arrayAllPropValues.push(product[propName]);
//     }
//   }
//   return arrayAllPropValues;
// }

// console.log(getAllPropValues("name"));
// console.log(getAllPropValues("quantity"));

//!====================================================

//* –¥–∑ 41/41

// const atTheOldToad = {
//   potions: [
//     { name: "Speed potion", price: 460 },
//     { name: "Dragon breath", price: 780 },
//     { name: "Stone skin", price: 520 },
//   ],

//   getPotions() {
//     return this.potions;
//   },

//   addPotion(newPotion) {
//     for (const potion of this.potions) {
//       if (potion.name === newPotion.name) {
//         return `Error! Potion ${newPotion.name} is already in your inventory!`;
//       }
//     }
//     return this.potions.push(newPotion);
//   },

//   removePotion(potionName) {
//     for (const potion of this.potions) {
//       const potionIndex = this.potions.indexOf(potion);
//       if (potion.name === potionName) {
//         return this.potions.splice(potionIndex, 1);
//       }
//     }

//     return `Potion ${potionName} is not in inventory!`;
//   },

//   updatePotionName(oldName, newName) {
//     for (const potion of this.potions) {
//       if (potion.name === oldName) {
//         potion.name = newName;
//       }
//     }
//     return `Potion ${oldName} is not in inventory!`;
//   },
// };

// console.log(atTheOldToad.getPotions());
// console.table(atTheOldToad.addPotion({ name: "Invisibility", price: 620 }));
// console.table(atTheOldToad.addPotion({ name: "Power potion", price: 270 }));
// console.table(atTheOldToad.addPotion({ name: "Dragon breath", price: 700 }));
// console.table(atTheOldToad.addPotion({ name: "Stone skin", price: 240 }));
// atTheOldToad.removePotion("Dragon breath");
// atTheOldToad.removePotion("Speed potion");
// atTheOldToad.updatePotionName("Dragon breath", "Polymorth");
// atTheOldToad.updatePotionName("Stone skin", "Invulnerability potion");
