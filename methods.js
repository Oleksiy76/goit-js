//* –º–µ—Ç–æ–¥ REDUCE

// const numbers = [5, 10, 15, 20, 25];

// const total = numbers.reduce((acc, number) => {
//     console.log(number);
//     console.log("üöÄ ~ acc:", acc);
//     return acc + number;
// }, 0);

// –≤ –æ–¥–Ω—É —Å—Ç—Ä–æ–∫—É

// const total = numbers.reduce((acc, number) => acc + number, 0);

// console.log("üöÄ ~ total:", total);

//** –°—á–∏—Ç–∞–µ–º –æ–±—â—É—é –ó–ü

// const salary = {
//   mango: 100,
//   poly: 50,
//   ajax: 150,
// };

// const totalSalary = Object.values(salary).reduce(
//   (total, value) => total + value,
//   0
// );

// console.log(totalSalary);

//!=======–ú–û–î–£–õ–¨ 4 (—É—Ä–æ–∫ 2)=============================================

//*–ü–µ—Ä–µ–±–∏—Ä–∞—é—á—ñ –º–µ—Ç–æ–¥–∏ –º–∞—Å–∏–≤—É

// const cars = [
//   {
//     make: "Honda",
//     model: "CR-V",
//     type: "suv",
//     amount: 14,
//     price: 24045,
//     onSale: true,
//   },
//   {
//     make: "Honda",
//     model: "Accord",
//     type: "sedan",
//     amount: 2,
//     price: 22455,
//     onSale: true,
//   },
//   {
//     make: "Mazda",
//     model: "Mazda 6",
//     type: "sedan",
//     amount: 8,
//     price: 24195,
//     onSale: false,
//   },
//   {
//     make: "Mazda",
//     model: "CX-9",
//     type: "suv",
//     amount: 7,
//     price: 31520,
//     onSale: true,
//   },
//   {
//     make: "Toyota",
//     model: "4Runner",
//     type: "suv",
//     amount: 19,
//     price: 34210,
//     onSale: false,
//   },
//   {
//     make: "Toyota",
//     model: "Sequoia",
//     type: "suv",
//     amount: 16,
//     price: 45560,
//     onSale: false,
//   },
//   {
//     make: "Toyota",
//     model: "Tacoma",
//     type: "truck",
//     amount: 4,
//     price: 24320,
//     onSale: true,
//   },
//   {
//     make: "Ford",
//     model: "F-150",
//     type: "truck",
//     amount: 11,
//     price: 27110,
//     onSale: true,
//   },
//   {
//     make: "Ford",
//     model: "Fusion",
//     type: "sedan",
//     amount: 13,
//     price: 22120,
//     onSale: true,
//   },
//   {
//     make: "Ford",
//     model: "Explorer",
//     type: "suv",
//     amount: 6,
//     price: 31660,
//     onSale: false,
//   },
// ];

// //* –ù–µ—Ö–∞–π —Ñ—É–Ω–∫—Ü—ñ—è getModels –ø–æ–≤–µ—Ä—Ç–∞—î –º–∞—Å–∏–≤ –º–æ–¥–µ–ª–µ–π (–ø–æ–ª–µ model) –≤—Å—ñ—Ö –∞–≤—Ç–æ–º–æ–±—ñ–ª—ñ–≤.

// const getModels = (cars) => cars.map((car) => car.model);

// 1. –°–ø–æ—á–∞—Ç–∫—É –≤—ã–∑—ã–≤–∞–µ–º –º–µ—Ç–æ–¥ MAP  cars => cars.map()
// 2. MAP –ø—Ä–∏–Ω–∏–º–∞–µ—Ç –∫–æ–ª–±–µ–∫-—Ñ., –Ω–∞–º –Ω—É–∂–Ω–∞ —Ç–æ–ª—å–∫–æ —Ç–µ–∫—É—â–∞—è –º–∞—à–∏–Ω–∞ cars => cars.map(car =>)
// 3. –ò —Ç–µ–ø–µ—Ä—å car —è –º–æ–≥—É –∑–∞–º–µ–Ω–∏—Ç—å –∫–æ–ª–±–µ–∫-—Ñ—É–Ω–∫—Ü–∏–µ–π –Ω–∞ madel: cars => cars.map(car => car.model)

// 4. –ó–∞–ø–∏—Å—å —á–µ—Ä–µ–∑ return

// const getModels = (cars) =>
//   cars.map((car) => {
//     return car.model;
//   });

// 5. –î–µ—Å—Ç—Ä—É–∫—Ç—É—Ä–∏–∑–∏—Ä—É–µ–º, —á—Ç–æ–± —É–π—Ç–∏ –æ—Ç –∑–∞–ø–∏—Å–∏ car.model - –Ω–µ –∑–≤–µ—Ä—Ç–∞—Ç–∏—Å—è —á–µ—Ä–µ–∑ –∫—Ä–∞–ø–∫—É

// const getModels = (cars) => cars.map(({ model }) => model);

// console.table(getModels(cars));

//!====================================================

//*–ù–µ—Ö–∞–π —Ñ—É–Ω–∫—Ü—ñ—è makeCarsWithDiscount –ø–æ–≤–µ—Ä—Ç–∞—î –Ω–æ–≤–∏–π –º–∞—Å–∏–≤ –æ–±'—î–∫—Ç—ñ–≤ —ñ–∑ –∑–º—ñ–Ω–Ω–∏–º –∑–Ω–∞—á–µ–Ω–Ω—è–º –≤–ª–∞—Å—Ç–∏–≤–æ—Å—Ç—ñ price –∑–∞–ª–µ–∂–Ω–æ –≤—ñ–¥ –ø–µ—Ä–µ–¥–∞–Ω–æ—ó –∑–Ω–∏–∂–∫–∏.

//1. –í—ã–∑—ã–≤–∞–µ–º –º–µ—Ç–æ–¥ map   (cars, dicount) => cars.map()
//2. map –ø—Ä–∏–Ω–∏–º–∞–µ—Ç –∫–æ–ª–±-—Ñ., –∞ —Ç–∞ –≤ —Å–≤–æ—é –æ—á–µ—Ä–µ–¥—å –ø—Ä–∏–Ω–∏–º–∞–µ—Ç —Ç–µ–∫—É—â–∏–π —ç–ª–µ–º–µ–Ω—Ç –º–∞—Å—Å–∏–≤–∞ –æ–±—ä–µ–∫—Ç car (cars, dicount) => cars.map(car =>)
//3. –î–∞–ª–µ–µ –Ω–∞–º –Ω–∞–¥–æ –∑–∞–ø–∏—Å–∞—Ç—å, —á—Ç–æ –∑–∞–º–µ–Ω–∏—Ç –ø–æ–ª–µ price
//4. –¢.–∫. –Ω–∞–º –Ω—É–∂–Ω–æ –≤–Ω–æ—Å–∏—Ç—å –∏–∑–º–µ–Ω–µ–Ω–∏—è –≤ –º–∞—Å—Å–∏–≤ (–±—É–¥–µ—Ç –Ω–æ–≤–∞—è —Ü–µ–Ω–∞), –º—ã –¥–æ–ª–∂–Ω—ã —Å–¥–µ–ª–∞—Ç—å —Å–Ω–∞—á–∞–ª –∫–æ–ø–∏—é –æ—Ä–∏–≥–∏–Ω–∞–ª—å–Ω–æ–≥–æ –º–∞—Å—Å–∏–≤–∞ –æ–±—ä–µ–∫—Ç–æ–≤ –ø—Ä–∏ –ø–æ–º–æ—â–∏ ...spread,
//   –∞ —Ç.–∫. —ç—Ç–æ –±—É–¥–µ—Ç –Ω–æ–≤—ã–π –æ–±—ä–µ–∫—Ç, —Ç–æ –±–µ—Ä—ë–º –≤ —Ñ–∏–≥—É—Ä–Ω—ã–µ —Å–∫–æ–±–∫–∏ (cars, dicount) => cars.map((car) => ({...car, }))
//5. –ß—Ç–æ–± –∑–∞–ø–∏—Å–∞—Ç—å –Ω–æ–≤—É—é —Ü–µ–Ω—É —Å–æ —Å–∫–∏–¥–∫–æ–π –∏—Å–ø–æ–ª—å–∑—É–µ–º —Ñ–æ—Ä–º—É–ª—É: car.price * (1 - discount)
//6. –í –Ω–æ–≤–æ–º –æ–±—ä–µ–∫—Ç–µ –Ω–∞–º –Ω–∞–¥–æ –ø–µ—Ä–µ–∑–∞–ø–∏—Å–∞—Ç—å —Å–≤–æ–π—Å—Ç–≤–æ price, –ø–æ—ç—Ç–æ–º—É –æ–±—Ä–∞—â–∞–µ–∏—Å—è —á–µ—Ä–µ–∑ –¥–≤–æ–µ—Ç–æ—á–∏–µ price: car.price * (1 - discount)
//7. C–°–æ–æ—Ç–≤–µ—Ç—Å—Ç–≤–µ–Ω–Ω–æ –∑–∞–ø–∏—Å–∞–µ–º –Ω–æ–≤—É—é —Ü–µ–Ω—É –≤ –Ω–æ–≤—ã–π –æ–±—ä–µ–∫—Ç (cars, dicount) => cars.map((car) => ({...car, price: car.price * (1 - discount)}))

// const makeCarsWithDiscount = (cars, discount) =>
//   cars.map((car) => ({ ...car, price: car.price * (1 - discount) }));

// console.table(makeCarsWithDiscount(cars, 0.2));
// console.table(makeCarsWithDiscount(cars, 0.4));

//!=================FILTER================================

//* –ù–µ—Ö–∞–π —Ñ—É–Ω–∫—Ü—ñ—è filterByPrice –ø–æ–≤–µ—Ä—Ç–∞—î –º–∞—Å–∏–≤ –∞–≤—Ç–æ–º–æ–±—ñ–ª—ñ–≤ —Ü—ñ–Ω–∞ —è–∫–∏—Ö –º–µ–Ω—à–∞ –Ω—ñ–∂ –∑–Ω–∞—á–µ–Ω–Ω—è –ø–∞—Ä–∞–º–µ—Ç—Ä–∞ threshold.

// const filterByPrice = (cars, threshold) => cars.filter(({price}) => price <= threshold);

// –±–µ–∑ –¥–µ—Å—Ç—Ä—É–∫—Ç—É—Ä–∏–∑–∞—Ü–∏–∏
// const filterByPrice = (cars, threshold) =>
//   cars.filter((car) => {
//     if (car.price <= threshold) {
//       return car.price;
//     }
//   });

// console.table(filterByPrice(cars, 30000));
// console.table(filterByPrice(cars, 23000));

//!====================================================

//* –ù–µ—Ö–∞–π —Ñ—É–Ω–∫—Ü—ñ—è getCarsWithDiscount –ø–æ–≤–µ—Ä—Ç–∞—î –º–∞—Å–∏–≤ –∞–≤—Ç–æ–º–æ–±—ñ–ª—ñ–≤ –≤–ª–∞—Å—Ç–∏–≤—ñ—Å—Ç—å onSale —è–∫–∏—Ö true.

// const getCarsWithDiscount = (cars) =>
//     cars.filter(({ onSale }) => onSale); // –ø–æ–¥ –∫–∞–ø–æ—Ç–æ–º onSale === true

// console.table(getCarsWithDiscount(cars));

//!====================================================

//* –ù–µ—Ö–∞–π —Ñ—É–Ω–∫—Ü—ñ—è getCarsWithType –ø–æ–≤–µ—Ä—Ç–∞—î –º–∞—Å–∏–≤ –∞–≤—Ç–æ–º–æ–±—ñ–ª—ñ–≤ —Ç–∏–ø —è–∫–∏—Ö –∑–±—ñ–≥–∞—î—Ç—å—Å—è –∑—ñ –∑–Ω–∞—á–µ–Ω–Ω—è–º –ø–∞—Ä–∞–º–µ—Ç—Ä–∞ type.

// const getCarsWithType = (cars, type) => cars.filter(({ type: carType }) => type === carType);
// –∑–¥–µ—Å—å —É –Ω–∞—Å —Å–æ–≤–ø–∞–¥–∞—é—Ç –ø–∞—Ä–∞–º–µ—Ç—Ä type –∏ —Å–≤–æ–π—Å—Ç–≤–æ –æ–±—ä–µ–∫—Ç–∞ type, –ø–æ—ç—Ç–æ–º—É –¥–µ–ª–∞–µ–º –¥–µ—Å—Ç—Ä—É–∫—Ç—É—Ä–∏–∑–∞—Ü–∏—é
// –ø–µ—Ä–µ–º–µ–Ω–Ω–æ–π –∫–æ–ª–±–µ–∫-—Ñ. type: carType, —Ç.–µ. –ø—Ä–∏—Å–≤–∞–∏–≤–∞–µ–º –Ω–æ–≤–æ–µ –∏–º—è

// console.table(getCarsWithType(cars, 'suv'));
// console.table(getCarsWithType(cars, 'sedan'));

//!===============FIND==================================

//* –ú–µ—Ç–æ–¥ find(). –ò—â–µ–º –º–∞—à–∏–Ω—ã –æ–ø—Ä–µ–¥–µ–ª—ë–Ω–Ω–æ–π –º–æ–¥–µ–ª–∏.

// const getCarByModel = (cars, model) =>
//   cars.find(({ model: carModel }) => model === carModel); // –ø–æ–¥ –∫–∞–ø–æ—Ç–æ–º –∏–¥—ë—Ç –ø—Ä–æ–≤–µ—Ä–∫–∞ - –µ—Å–ª–∏ –∫–æ–ª–±-—Ñ –≤–æ–∑–≤—Ä–∞—â–∞–µ—Ç true, —ç–ª–µ–º–µ–Ω—Ç –ø–æ–¥—Ö–æ–¥–∏—Ç
// –∏ –º—ã –µ–≥–æ —Å—Ä–∞–∑—É –≤–æ–∑–≤—Ä–∞—â–∞–µ–º, –∞ –µ—Å–ª–∏ false - –ø–æ–∏—Å–∫ –ø—Ä–æ–¥–æ–ª–∂–∞–µ—Ç—Å—è

// –µ—Å–ª–∏ –∑–∞–ø–∏—Å–∞—Ç—å —á–µ—Ä–µ–∑ —Ç–æ—á–∫—É  (car) => car.model === model

// console.log(getCarByModel(cars, "F-150"));
// console.log(getCarByModel(cars, "CX-9"));

//!==============SORT===================

//* —Å–æ—Ä—Ç–∏—Ä–æ–≤–∫–∞, –∫–æ–≥–¥–∞ –∑–Ω–∞—á–µ–Ω–∏–µ "—Å–ª–æ–≤–æ"

// const arr = ['b', 'r', 's', 'a', 'c'];

// arr.sort((a, b) => a.localeCompare(b)); // –∑–∞ –∑—Ä–æ—Å—Ç–∞–Ω–Ω—è–º
// arr.sort((a, b) => b.localeCompare(a)); // –∑–∞ —Å–ø–∞–¥–∞–Ω–Ω—è–º

// console.log(arr);

//* –ù–µ—Ö–∞–π —Ñ—É–Ω–∫—Ü—ñ—è sortByDescendingPrice –ø–æ–≤–µ—Ä—Ç–∞—î –Ω–æ–≤–∏–π –º–∞—Å–∏–≤ –∞–≤—Ç–æ–º–æ–±—ñ–ª—ñ–≤ –≤—ñ–¥—Å–æ—Ä—Ç–æ–≤–∞–Ω–∏–π –∑–∞ –∑–º–µ–Ω—à–µ–Ω–Ω—è–º –∑–Ω–∞—á–µ–Ω–Ω—è –≤–ª–∞—Å—Ç–∏–≤–æ—Å—Ç—ñ price.

// const sortByDescendingPrice = cars => [...cars].sort((a, b) => a.amount - b.amount);

// console.table(sortByDescendingPrice(cars));

//* –ù–µ—Ö–∞–π —Ñ—É–Ω–∫—Ü—ñ—è sortByDescendingPrice –ø–æ–≤–µ—Ä—Ç–∞—î –Ω–æ–≤–∏–π –º–∞—Å–∏–≤ –∞–≤—Ç–æ–º–æ–±—ñ–ª—ñ–≤ –≤—ñ–¥—Å–æ—Ä—Ç–æ–≤–∞–Ω–∏–π –∑–∞ –∑–º–µ–Ω—à–µ–Ω–Ω—è–º –∑–Ω–∞—á–µ–Ω–Ω—è –≤–ª–∞—Å—Ç–∏–≤–æ—Å—Ç—ñ price.

// const sortByDescendingPrice = cars => [...cars].sort((a, b) => b.price - a.price);

// console.table(sortByDescendingPrice(cars));

//* –ù–µ—Ö–∞–π —Ñ—É–Ω–∫—Ü—ñ—è sortByModel –ø–æ–≤–µ—Ä—Ç–∞—î –Ω–æ–≤–∏–π –º–∞—Å–∏–≤ –∞–≤—Ç–æ–º–æ–±—ñ–ª—ñ–≤ –≤—ñ–¥—Å–æ—Ä—Ç–æ–≤–∞–Ω–∏–π –∑–∞ –Ω–∞–∑–≤–æ—é –º–æ–¥–µ–ª—ñ –≤ –∞–ª—Ñ–∞–≤—ñ—Ç–Ω–æ–º—É —Ç–∞
//* –∑–≤–æ—Ä–æ—Ç–Ω–æ–º—É –∞–ª—Ñ–∞–≤—ñ—Ç–Ω–æ–º—É –ø–æ—Ä—è–¥–∫—É, –≤ –∑–∞–ª–µ–∂–Ω–æ—Å—Ç—ñ –≤—ñ–¥ –∑–Ω–∞—á–µ–Ω–Ω—è –ø–∞—Ä–∞–º–µ—Ç—Ä–∞ order.

// const sortByModel = (cars, order) =>
//   [...cars].sort((a, b) => {
//     switch (order) {
//       case "asc":
//         return a.model.localeCompare(b.model);
//       case "desc":
//         return b.model.localeCompare(a.model);
//     }
//   });

// console.table(sortByModel(cars, "asc"));
// console.table(sortByModel(cars, "desc"));

//!==============REDUCE===================

//* –ù–µ—Ö–∞–π —Ñ—É–Ω–∫—Ü—ñ—è getTotalAmount –ø–æ–≤–µ—Ä—Ç–∞—î –∑–∞–≥–∞–ª—å–Ω—É –∫—ñ–ª—å–∫—ñ—Å—Ç—å –∞–≤—Ç–æ–º–æ–±—ñ–ª—ñ–≤ (–∑–Ω–∞—á–µ–Ω–Ω—è –≤–ª–∞—Å—Ç–∏–≤–æ—Å—Ç–µ–π amount).

// const getTotalAmount = (cars) =>
//   cars.reduce((acc, { amount }) => acc + amount, 0);

// console.log(getTotalAmount(cars));

//!==============–õ–∞–Ω—Ü—é–∂–∫–∏ –º–µ—Ç–æ–¥—ñ–≤===================

//* –ù–µ—Ö–∞–π —Ñ—É–Ω–∫—Ü—ñ—è getAvailableCarNames –ø–æ–≤–µ—Ä—Ç–∞—î –º–∞—Å–∏–≤ –º–æ–¥–µ–ª–µ–π –∞–≤—Ç–æ–º–æ–±—ñ–ª—ñ–≤, –∞–ª–µ —Ç—ñ–ª—å–∫–∏ —Ç–∏—Ö, —è–∫—ñ –∑–∞—Ä–∞–∑ –Ω–∞ —Ä–æ–∑–ø—Ä–æ–¥–∞–∂—ñ.

// const getModelsOnSale = (cars) =>
//   cars.filter(({ onSale }) => onSale).map(({ model }) => model);

// console.table(getModelsOnSale(cars));

//* –ù–µ—Ö–∞–π —Ñ—É–Ω–∫—Ü—ñ—è getSortedCarsOnSale –ø–æ–≤–µ—Ä—Ç–∞—î –º–∞—Å–∏–≤ –∞–≤—Ç–æ–º–æ–±—ñ–ª—ñ–≤ –Ω–∞ —Ä–æ–∑–ø—Ä–æ–¥–∞–∂—ñ (–≤–ª–∞—Å—Ç–∏–≤—ñ—Å—Ç—å onSale), –≤—ñ–¥—Å–æ—Ä—Ç–æ–≤–∞–Ω–∏—Ö –∑–∞ –∑—Ä–æ—Å—Ç–∞–Ω–Ω—è–º —Ü—ñ–Ω–∏.

// const getSortedCarsOnSale = (cars) =>
//   cars.filter(({ onSale }) => onSale).sort((a, b) => a.price - b.price);

// console.table(getSortedCarsOnSale(cars));

//!====================================================

//* –¢—Ä–µ–±–∞ –≤–∏–≤–µ—Å—Ç–∏ –Ω–æ–≤–∏–π –º–∞—Å–∏–≤ –∑ —É–Ω—ñ–∫–∞–ª—å–Ω–∏–º–∏ –∑–Ω–∞—á–µ–Ω–Ω—è–º–∏ –µ–ª–µ–º–µ–Ω—Ç—ñ–≤ –º–∞—Å–∏–≤—É

// const numbers = [1, 1, 2, 2, 3, 3, 4, 4];

// const uniqueNumbers = numbers.filter(
//   (number, index, numbers) => numbers.indexOf(number) === index
// );

// console.log(uniqueNumbers);

// console.log(new Set(numbers)); // —Å—Ç—Ä—É–∫—Ç—É—Ä–∞ –¥–∞–Ω–∏—Ö new Set –ø–æ–≤–µ—Ä—Ç–∞—î –∫–æ–ª–µ–∫—Ü—ñ—é —É–Ω—ñ–∫–∞–ª—å–Ω–∏—Ö –∑–Ω–∞—á–µ–Ω—å, –æ—Ç—Ä–∏–º–∞—î–º–æ {1, 2, 3, 4},
// –ø–æ—Ç—ñ–º –º–æ–∂–Ω–∞ –ø–µ—Ä–µ—Ç–≤–æ—Ä–∏—Ç–∏ –Ω–∞ –º–∞—Å–∏–≤

//!=================findIndex=================================

// const subjects = ["Math", "PE", "Physics"];

// const index = subjects.findIndex((subject) => subject == "Physics");

// console.log(index);

// const arr = [3, 4, 2, 35, 99, 7, 15];

// const i = arr.findIndex((el) => el > 40);

// console.log(i);
// console.log(arr[i]);

//!====================================================

//* –¥–∑ 45/48

// const books = [
//   {
//     title: "The Last Kingdom",
//     author: "Bernard Cornwell",
//     rating: 8.38,
//   },
//   {
//     title: "Beside Still Waters",
//     author: "Robert Sheckley",
//     rating: 8.51,
//   },
//   {
//     title: "The Dream of a Ridiculous Man",
//     author: "Fyodor Dostoevsky",
//     rating: 7.75,
//   },
//   { title: "Redder Than Blood", author: "Tanith Lee", rating: 7.94 },
//   {
//     title: "The Dreams in the Witch House",
//     author: "Howard Lovecraft",
//     rating: 8.67,
//   },
// ];

// const MIN_BOOK_RATING = 8;

// const names = (books) => {
//   return books
//     .filter((book) => book.rating > MIN_BOOK_RATING)
//     .map((book) => book.author)
//     .sort((a, b) => a.localeCompare(b));
// };

// console.table(books);
// console.table(names(books, MIN_BOOK_RATING));
